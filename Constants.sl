/* function codes for R-type instructions */
let F_SLL       = 6'd00;
let F_SRL       = 6'd02;
let F_SRA       = 6'd03;
let F_SLLV      = 6'd04;
let F_SRLV      = 6'd06;
let F_SRAV      = 6'd07;
let F_JR        = 6'd08;
let F_JALR      = 6'd09;
let F_SYSCALL   = 6'd12;
let F_MFHI      = 6'd16;
let F_MTHI      = 6'd17;
let F_MFLO      = 6'd18;
let F_MTLO      = 6'd19;
let F_MULT      = 6'd24;
let F_MULTU     = 6'd25;
let F_DIV       = 6'd26;
let F_DIVU      = 6'd27;
let F_ADD       = 6'd32;
let F_ADDU      = 6'd33;
let F_SUB       = 6'd34;
let F_SUBU      = 6'd35;
let F_AND       = 6'd36;
let F_OR        = 6'd37;
let F_XOR       = 6'd38;
let F_NOR       = 6'd39;
let F_SLT       = 6'd42;
let F_SLTU      = 6'd43;

/* opcodes for other instructions */
let OP_J        = 6'd02;
let OP_JAL      = 6'd03;
let OP_BEQ      = 6'd04;
let OP_BNE      = 6'd05;
let OP_BLEZ     = 6'd06;
let OP_BGTZ     = 6'd07;
let OP_ADDI     = 6'd08;
let OP_ADDIU    = 6'd09;
let OP_SLTI     = 6'd10;
let OP_SLTIU    = 6'd11;
let OP_ANDI     = 6'd12;
let OP_ORI      = 6'd13;
let OP_XORI     = 6'd14;
let OP_LUI      = 6'd15;
let OP_LB       = 6'd32;
let OP_LH       = 6'd33;
let OP_LW       = 6'd34;
let OP_LBU      = 6'd36;
let OP_LHU      = 6'd37;
let OP_SB       = 6'd40;
let OP_SH       = 6'd41;
let OP_SW       = 6'd43;

/* ALU operations */
let ALU_ADD     = 4'd00;
let ALU_SUB     = 4'd01;
let ALU_SLT     = 4'd02;
let ALU_ULT     = 4'd03;
let ALU_AND     = 4'd04;
let ALU_OR      = 4'd05;
let ALU_XOR     = 4'd06;
let ALU_NOR     = 4'd07;

/* Shifter operations */
let SHL         = 2'b00;
let LSHR        = 2'b10;
let ASHR        = 2'b11;

/* Condition codes */
let CondEQ      = 2'b00;
let CondNE      = 2'b01;
let CondLEZ     = 2'b10;
let CondGTZ     = 2'b11;
